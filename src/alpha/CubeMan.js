// CubeMan version 1.0
function alpha_CubeMan(BlockTypes) {
  var v = [
    new alpha_Vector(-0.102166, -0.246654, 0.102166),
    new alpha_Vector(-0.102166, -0.246654, -0.102166),
    new alpha_Vector(0.102166, -0.246654, -0.102166),
    new alpha_Vector(0.102166, -0.246654, 0.102166),
    new alpha_Vector(-0.102166, -0.040906, 0.102166),
    new alpha_Vector(-0.102166, -0.040906, -0.102166),
    new alpha_Vector(0.102166, -0.040906, -0.102166),
    new alpha_Vector(0.102166, -0.040906, 0.102166),
    new alpha_Vector(-0.07235, -0.281348, -0.07235),
    new alpha_Vector(-0.07235, -0.281348, 0.07235),
    new alpha_Vector(0.07235, -0.281348, -0.07235),
    new alpha_Vector(0.07235, -0.281348, 0.07235),
    new alpha_Vector(-0.07235, -0.281348, -0.07235),
    new alpha_Vector(-0.07235, -0.281348, 0.07235),
    new alpha_Vector(0.07235, -0.281348, -0.07235),
    new alpha_Vector(0.07235, -0.281348, 0.07235),
    new alpha_Vector(-0.157418, -0.962703, -0.107114),
    new alpha_Vector(-0.157418, -0.962703, 0.107114),
    new alpha_Vector(0.157418, -0.962703, -0.107114),
    new alpha_Vector(0.157418, -0.962703, 0.107114),
    new alpha_Vector(-0.250627, -0.385758, -0.107114),
    new alpha_Vector(-0.250627, -0.385758, 0.107114),
    new alpha_Vector(0.250627, -0.385758, -0.107114),
    new alpha_Vector(0.250627, -0.385758, 0.107114),
    new alpha_Vector(-0.219117, -0.512434, -0.107114),
    new alpha_Vector(0.219117, -0.512434, -0.107114),
    new alpha_Vector(0.219117, -0.512434, 0.107114),
    new alpha_Vector(-0.219117, -0.512434, 0.107114),
    new alpha_Vector(-0.156655, -0.795676, -0.107114),
    new alpha_Vector(0.156655, -0.795676, -0.107114),
    new alpha_Vector(0.156655, -0.795676, 0.107114),
    new alpha_Vector(-0.156655, -0.795676, 0.107114),
    new alpha_Vector(0.250627, -0.385758, -0.107114),
    new alpha_Vector(0.250627, -0.385758, 0.107114),
    new alpha_Vector(0.219117, -0.512434, -0.107114),
    new alpha_Vector(0.219117, -0.512434, 0.107114),
    new alpha_Vector(0.47824, -0.752908, -0.079144),
    new alpha_Vector(0.47824, -0.752908, 0.079144),
    new alpha_Vector(0.406667, -0.817066, -0.079144),
    new alpha_Vector(0.406667, -0.817066, 0.079144),
    new alpha_Vector(0.47824, -0.752908, -0.079144),
    new alpha_Vector(0.47824, -0.752908, 0.079144),
    new alpha_Vector(0.406667, -0.817066, -0.079144),
    new alpha_Vector(0.406667, -0.817066, 0.079144),
    new alpha_Vector(0.47824, -0.752908, -0.079144),
    new alpha_Vector(0.47824, -0.752908, 0.079144),
    new alpha_Vector(0.406667, -0.817066, 0.079144),
    new alpha_Vector(0.47824, -1.111776, -0.079144),
    new alpha_Vector(0.47824, -1.111776, 0.079144),
    new alpha_Vector(0.406667, -1.14858, -0.079144),
    new alpha_Vector(0.406667, -1.175934, 0.079144),
    new alpha_Vector(0.442454, -1.143855, 0.079144),
    new alpha_Vector(-0.157418, -0.962703, -0.107114),
    new alpha_Vector(-0.157418, -0.962703, 0.107114),
    new alpha_Vector(0.157418, -0.962703, -0.107114),
    new alpha_Vector(0.157418, -0.962703, 0.107114),
    new alpha_Vector(-0.156655, -0.795676, -0.107114),
    new alpha_Vector(-0.156655, -0.795676, 0.107114),
    new alpha_Vector(-0.156655, -0.795676, -0.107114),
    new alpha_Vector(-0.156655, -0.795676, 0.107114),
    new alpha_Vector(-0.156655, -0.795676, -0.107114),
    new alpha_Vector(-0.156655, -0.795676, 0.107114),
    new alpha_Vector(-0.25854, -1.307287, -0.083569),
    new alpha_Vector(-0.25854, -1.307287, 0.083569),
    new alpha_Vector(-0.13632, -1.333494, -0.083569),
    new alpha_Vector(-0.13632, -1.333494, 0.083569),
    new alpha_Vector(-0.292975, -1.917316, -0.107114),
    new alpha_Vector(-0.292975, -1.917316, 0.107114),
    new alpha_Vector(-0.13632, -1.950906, -0.107114),
    new alpha_Vector(-0.13632, -1.950906, 0.107114),
    new alpha_Vector(0.102166, -0.040906, 0.102166),
    new alpha_Vector(0.102166, -0.040906, -0.102166),
    new alpha_Vector(-0.102166, -0.040906, -0.102166),
    new alpha_Vector(-0.102166, -0.040906, 0.102166),
    new alpha_Vector(0.07235, -0.281348, -0.07235),
    new alpha_Vector(0.07235, -0.281348, 0.07235),
    new alpha_Vector(-0.07235, -0.281348, -0.07235),
    new alpha_Vector(-0.07235, -0.281348, 0.07235),
    new alpha_Vector(0.07235, -0.281348, -0.07235),
    new alpha_Vector(0.07235, -0.281348, 0.07235),
    new alpha_Vector(-0.07235, -0.281348, -0.07235),
    new alpha_Vector(-0.07235, -0.281348, 0.07235),
    new alpha_Vector(0.157418, -0.962703, -0.107114),
    new alpha_Vector(0.157418, -0.962703, 0.107114),
    new alpha_Vector(-0.157418, -0.962703, -0.107114),
    new alpha_Vector(-0.157418, -0.962703, 0.107114),
    new alpha_Vector(0.250627, -0.385758, 0.107114),
    new alpha_Vector(-0.250627, -0.385758, -0.107114),
    new alpha_Vector(-0.250627, -0.385758, 0.107114),
    new alpha_Vector(0.219117, -0.512434, -0.107114),
    new alpha_Vector(-0.219117, -0.512434, -0.107114),
    new alpha_Vector(-0.219117, -0.512434, 0.107114),
    new alpha_Vector(0.219117, -0.512434, 0.107114),
    new alpha_Vector(0.156655, -0.795676, -0.107114),
    new alpha_Vector(-0.156655, -0.795676, -0.107114),
    new alpha_Vector(-0.156655, -0.795676, 0.107114),
    new alpha_Vector(0.156655, -0.795676, 0.107114),
    new alpha_Vector(-0.250627, -0.385758, -0.107114),
    new alpha_Vector(-0.250627, -0.385758, 0.107114),
    new alpha_Vector(-0.219117, -0.512434, -0.107114),
    new alpha_Vector(-0.219117, -0.512434, 0.107114),
    new alpha_Vector(-0.47824, -0.752908, -0.079144),
    new alpha_Vector(-0.47824, -0.752908, 0.079144),
    new alpha_Vector(-0.406667, -0.817066, -0.079144),
    new alpha_Vector(-0.406667, -0.817066, 0.079144),
    new alpha_Vector(-0.47824, -0.752908, -0.079144),
    new alpha_Vector(-0.47824, -0.752908, 0.079144),
    new alpha_Vector(-0.406667, -0.817066, -0.079144),
    new alpha_Vector(-0.406667, -0.817066, 0.079144),
    new alpha_Vector(-0.47824, -0.752908, -0.079144),
    new alpha_Vector(-0.47824, -0.752908, 0.079144),
    new alpha_Vector(-0.406667, -0.817066, 0.079144),
    new alpha_Vector(-0.47824, -1.111776, -0.079144),
    new alpha_Vector(-0.47824, -1.111776, 0.079144),
    new alpha_Vector(-0.406667, -1.14858, -0.079144),
    new alpha_Vector(-0.406667, -1.175934, 0.079144),
    new alpha_Vector(0.157418, -0.962703, 0.107114),
    new alpha_Vector(-0.157418, -0.962703, 0.107114),
    new alpha_Vector(0.0, -0.829266, -0.107114),
    new alpha_Vector(0.0, -0.829266, 0.107114),
    new alpha_Vector(0.156655, -0.795676, -0.107114),
    new alpha_Vector(0.156655, -0.795676, 0.107114),
    new alpha_Vector(0.0, -0.829266, -0.107114),
    new alpha_Vector(0.0, -0.829266, 0.107114),
    new alpha_Vector(0.156655, -0.795676, -0.107114),
    new alpha_Vector(0.156655, -0.795676, 0.107114),
    new alpha_Vector(0.0, -0.829266, -0.107114),
    new alpha_Vector(0.0, -0.829266, 0.107114),
    new alpha_Vector(0.156655, -0.795676, -0.107114),
    new alpha_Vector(0.156655, -0.795676, 0.107114),
    new alpha_Vector(0.0, -0.829266, -0.107114),
    new alpha_Vector(0.0, -0.829266, 0.107114),
    new alpha_Vector(0.25854, -1.307287, -0.083569),
    new alpha_Vector(0.25854, -1.307287, 0.083569),
    new alpha_Vector(0.13632, -1.333494, -0.083569),
    new alpha_Vector(0.13632, -1.333494, 0.083569),
    new alpha_Vector(0.292975, -1.917316, -0.107114),
    new alpha_Vector(0.292975, -1.917316, 0.107114),
    new alpha_Vector(0.13632, -1.950906, -0.107114),
    new alpha_Vector(0.13632, -1.950906, 0.107114),
    new alpha_Vector(0.0, -0.385758, 0.107114),
    new alpha_Vector(0.0, -0.385758, -0.107114),
  ];

  shape = new alpha_Shape(
    new alpha_Face(alpha_QUADS, v[4], v[5], v[1], v[0]),
    new alpha_Face(alpha_QUADS, v[5], v[6], v[2], v[1]),
    new alpha_Face(alpha_QUADS, v[6], v[7], v[3], v[2]),
    new alpha_Face(alpha_QUADS, v[7], v[4], v[0], v[3]),
    new alpha_Face(alpha_QUADS, v[8], v[10], v[14], v[12]),
    new alpha_Face(alpha_QUADS, v[8], v[9], v[0], v[1]),
    new alpha_Face(alpha_QUADS, v[10], v[8], v[1], v[2]),
    new alpha_Face(alpha_QUADS, v[11], v[10], v[2], v[3]),
    new alpha_Face(alpha_QUADS, v[9], v[11], v[3], v[0]),
    new alpha_Face(alpha_QUADS, v[10], v[11], v[15], v[14]),
    new alpha_Face(alpha_QUADS, v[11], v[9], v[13], v[15]),
    new alpha_Face(alpha_QUADS, v[9], v[8], v[12], v[13]),
    new alpha_Face(alpha_QUADS, v[13], v[12], v[20], v[21]),
    new alpha_Face(alpha_QUADS, v[14], v[15], v[23], v[22]),
    new alpha_Face(alpha_QUADS, v[25], v[22], v[32], v[34]),
    new alpha_Face(alpha_QUADS, v[27], v[24], v[28], v[31]),
    new alpha_Face(alpha_QUADS, v[35], v[34], v[38], v[39]),
    new alpha_Face(alpha_QUADS, v[22], v[23], v[33], v[32]),
    new alpha_Face(alpha_QUADS, v[23], v[26], v[35], v[33]),
    new alpha_Face(alpha_QUADS, v[26], v[25], v[34], v[35]),
    new alpha_Face(alpha_QUADS, v[39], v[38], v[42], v[43]),
    new alpha_Face(alpha_QUADS, v[32], v[33], v[37], v[36]),
    new alpha_Face(alpha_QUADS, v[34], v[32], v[36], v[38]),
    new alpha_Face(alpha_QUADS, v[33], v[35], v[39], v[37]),
    new alpha_Face(alpha_QUADS, v[41], v[43], v[46], v[45]),
    new alpha_Face(alpha_QUADS, v[36], v[37], v[41], v[40]),
    new alpha_Face(alpha_QUADS, v[38], v[36], v[40], v[42]),
    new alpha_Face(alpha_QUADS, v[37], v[39], v[43], v[41]),
    new alpha_Face(alpha_QUADS, v[42], v[44], v[47], v[49]),
    new alpha_Face(alpha_QUADS, v[40], v[41], v[45], v[44]),
    new alpha_Face(alpha_QUADS, v[46], v[50], v[48], v[45]),
    new alpha_Face(alpha_QUADS, v[98], v[95], v[131], v[140]),
    new alpha_Face(alpha_QUADS, v[118], v[29], v[30], v[119]),
    new alpha_Face(alpha_QUADS, v[56], v[122], v[126], v[58]),
    new alpha_Face(alpha_QUADS, v[119], v[31], v[57], v[123]),
    new alpha_Face(alpha_QUADS, v[31], v[28], v[56], v[57]),
    new alpha_Face(alpha_QUADS, v[28], v[118], v[122], v[56]),
    new alpha_Face(alpha_QUADS, v[58], v[126], v[130], v[60]),
    new alpha_Face(alpha_QUADS, v[123], v[57], v[59], v[127]),
    new alpha_Face(alpha_QUADS, v[57], v[56], v[58], v[59]),
    new alpha_Face(alpha_QUADS, v[61], v[60], v[62], v[63]),
    new alpha_Face(alpha_QUADS, v[127], v[59], v[61], v[131]),
    new alpha_Face(alpha_QUADS, v[59], v[58], v[60], v[61]),
    new alpha_Face(alpha_QUADS, v[64], v[65], v[69], v[68]),
    new alpha_Face(alpha_QUADS, v[60], v[130], v[64], v[62]),
    new alpha_Face(alpha_QUADS, v[131], v[61], v[63], v[65]),
    new alpha_Face(alpha_QUADS, v[130], v[131], v[65], v[64]),
    new alpha_Face(alpha_QUADS, v[66], v[68], v[69], v[67]),
    new alpha_Face(alpha_QUADS, v[63], v[62], v[66], v[67]),
    new alpha_Face(alpha_QUADS, v[62], v[64], v[68], v[66]),
    new alpha_Face(alpha_QUADS, v[65], v[63], v[67], v[69]),
    new alpha_Face(alpha_QUADS, v[74], v[78], v[80], v[76]),
    new alpha_Face(alpha_QUADS, v[76], v[80], v[81], v[77]),
    new alpha_Face(alpha_QUADS, v[77], v[81], v[79], v[75]),
    new alpha_Face(alpha_QUADS, v[75], v[79], v[78], v[74]),
    new alpha_Face(alpha_QUADS, v[118], v[122], v[123], v[119]),
    new alpha_Face(alpha_QUADS, v[90], v[99], v[97], v[87]),
    new alpha_Face(alpha_QUADS, v[92], v[96], v[93], v[89]),
    new alpha_Face(alpha_QUADS, v[100], v[104], v[103], v[99]),
    new alpha_Face(alpha_QUADS, v[87], v[97], v[98], v[88]),
    new alpha_Face(alpha_QUADS, v[88], v[98], v[100], v[91]),
    new alpha_Face(alpha_QUADS, v[91], v[100], v[99], v[90]),
    new alpha_Face(alpha_QUADS, v[104], v[108], v[107], v[103]),
    new alpha_Face(alpha_QUADS, v[97], v[101], v[102], v[98]),
    new alpha_Face(alpha_QUADS, v[99], v[103], v[101], v[97]),
    new alpha_Face(alpha_QUADS, v[98], v[102], v[104], v[100]),
    new alpha_Face(alpha_QUADS, v[106], v[110], v[111], v[108]),
    new alpha_Face(alpha_QUADS, v[101], v[105], v[106], v[102]),
    new alpha_Face(alpha_QUADS, v[103], v[107], v[105], v[101]),
    new alpha_Face(alpha_QUADS, v[102], v[106], v[108], v[104]),
    new alpha_Face(alpha_QUADS, v[45], v[48], v[47], v[44]),
    new alpha_Face(alpha_QUADS, v[105], v[109], v[110], v[106]),
    new alpha_Face(alpha_QUADS, v[113], v[110], v[109], v[112]),
    new alpha_Face(alpha_QUADS, v[115], v[111], v[110], v[113]),
    new alpha_Face(alpha_QUADS, v[49], v[47], v[48], v[50]),
    new alpha_Face(alpha_QUADS, v[42], v[49], v[50], v[46]),
    new alpha_Face(alpha_QUADS, v[129], v[86], v[140], v[131]),
    new alpha_Face(alpha_QUADS, v[70], v[71], v[72], v[73]),
    new alpha_Face(alpha_QUADS, v[118], v[119], v[95], v[94]),
    new alpha_Face(alpha_QUADS, v[120], v[124], v[126], v[122]),
    new alpha_Face(alpha_QUADS, v[119], v[123], v[121], v[96]),
    new alpha_Face(alpha_QUADS, v[96], v[121], v[120], v[93]),
    new alpha_Face(alpha_QUADS, v[93], v[120], v[122], v[118]),
    new alpha_Face(alpha_QUADS, v[124], v[128], v[130], v[126]),
    new alpha_Face(alpha_QUADS, v[123], v[127], v[125], v[121]),
    new alpha_Face(alpha_QUADS, v[122], v[126], v[127], v[123]),
    new alpha_Face(alpha_QUADS, v[121], v[125], v[124], v[120]),
    new alpha_Face(alpha_QUADS, v[129], v[133], v[132], v[128]),
    new alpha_Face(alpha_QUADS, v[127], v[131], v[129], v[125]),
    new alpha_Face(alpha_QUADS, v[126], v[130], v[131], v[127]),
    new alpha_Face(alpha_QUADS, v[125], v[129], v[128], v[124]),
    new alpha_Face(alpha_QUADS, v[134], v[138], v[139], v[135]),
    new alpha_Face(alpha_QUADS, v[128], v[132], v[134], v[130]),
    new alpha_Face(alpha_QUADS, v[131], v[135], v[133], v[129]),
    new alpha_Face(alpha_QUADS, v[130], v[134], v[135], v[131]),
    new alpha_Face(alpha_QUADS, v[136], v[137], v[139], v[138]),
    new alpha_Face(alpha_QUADS, v[133], v[137], v[136], v[132]),
    new alpha_Face(alpha_QUADS, v[132], v[136], v[138], v[134]),
    new alpha_Face(alpha_QUADS, v[135], v[139], v[137], v[133]),
    new alpha_Face(alpha_QUADS, v[109], v[107], v[114], v[112]),
    new alpha_Face(alpha_QUADS, v[112], v[114], v[115], v[113]),
    new alpha_Face(alpha_QUADS, v[107], v[111], v[115], v[114]),
    new alpha_Face(alpha_QUADS, v[97], v[80], v[78], v[32]),
    new alpha_Face(alpha_QUADS, v[141], v[130], v[94], v[97]),
    new alpha_Face(alpha_QUADS, v[128], v[32], v[141], v[130]),
    new alpha_Face(alpha_QUADS, v[86], v[79], v[81], v[98])
  );

  var white = new alpha_Color(1, 1, 1);
  var gray = new alpha_Color(0.5, 0.5, 0.5);
  var dgray = new alpha_Color(0.25, 0.25, 0.25);
  var owhite = new alpha_Color(0.9, 0.9, 0.9);
  var black = new alpha_Color(0, 0, 0);
  var blank = [];
  for (var i = 0; i < 150; ++i) {
    blank[i] = [gray, owhite, owhite, gray];
  }
  blank = new alpha_Skin(blank);

  BlockTypes.Load("blank", "cubeman", blank, shape);
}
